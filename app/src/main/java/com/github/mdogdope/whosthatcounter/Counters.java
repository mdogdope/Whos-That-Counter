package com.github.mdogdope.whosthatcounter;

public class Counters {

	private final String[] types = {"bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water"};

	private final Double[][] counters = {
			{1.0,2.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,2.0,1.0,1.0,1.0,0.5,2.0,1.0,0.5,1.0},
			{1.0,0.5,1.0,1.0,0.5,0.5,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0},
			{1.0,1.0,2.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,1.0},
			{1.0,1.0,0.5,0.5,1.0,1.0,1.0,2.0,1.0,0.5,0.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0},
			{1.0,2.0,2.0,1.0,1.0,2.0,0.5,1.0,1.0,1.0,1.0,1.0,1.0,0.5,1.0,1.0,0.5,1.0},
			{0.5,2.0,1.0,1.0,0.5,1.0,1.0,0.5,0.0,1.0,1.0,2.0,2.0,0.5,0.5,2.0,2.0,1.0},
			{2.0,1.0,0.5,1.0,1.0,1.0,0.5,1.0,1.0,2.0,1.0,2.0,1.0,1.0,1.0,0.5,2.0,0.5},
			{2.0,1.0,1.0,0.5,1.0,2.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,0.5,0.5,1.0},
			{1.0,0.5,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,0.0,1.0,2.0,1.0,1.0,1.0},
			{0.5,1.0,0.5,1.0,1.0,1.0,0.5,0.5,1.0,0.5,2.0,1.0,1.0,0.5,1.0,2.0,0.5,2.0},
			{0.5,1.0,1.0,2.0,1.0,1.0,2.0,0.0,1.0,0.5,1.0,1.0,1.0,2.0,1.0,2.0,2.0,1.0},
			{1.0,1.0,2.0,1.0,1.0,1.0,0.5,2.0,1.0,2.0,2.0,0.5,1.0,1.0,1.0,1.0,0.5,0.5},
			{1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,0.5,1.0},
			{1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,0.5,2.0,0.5,1.0,1.0,0.5,1.0,0.5,0.0,1.0},
			{1.0,0.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,0.5,1.0,0.5,1.0},
			{2.0,1.0,1.0,1.0,1.0,0.5,2.0,2.0,1.0,1.0,0.5,2.0,1.0,1.0,1.0,1.0,0.5,1.0},
			{1.0,1.0,1.0,0.5,2.0,1.0,0.5,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,2.0,0.5,0.5},
			{1.0,1.0,0.5,1.0,1.0,1.0,2.0,1.0,1.0,0.5,2.0,1.0,1.0,1.0,1.0,2.0,1.0,0.5}
	};

	public Counters(){

	}

	public Double effectiveness(String type, String test){
		return counters[getTypeId(type)][getTypeId(test)];
	}

	public Double effectiveness(int typeId, int testId){
		return counters[typeId][testId];
	}

	public int getTypeId(String typeName){
		int ret = -1;
		for(int i = 0; i < types.length; i++){
			if(typeName.toLowerCase().equals(types[i])){
				ret = i;
				break;
			}
		}
		return ret;
	}

}
